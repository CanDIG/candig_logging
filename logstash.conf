# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  beats {
    port => 5044
  }
  file {
    path => "/home/dnaidoo/Documents/federation_service/log/federation.log"
    codec => "json"
    type => "federation"
  }
  file {
    path => "/tmp/tyk/*.csv"
    type => "tyk_analytics_csv"    
  }
}

filter {
  if [type] == "tyk_analytics_csv" {
    csv {
      
      columns => [
	"Method", "Host", "Path", "RawPath", "ContentLength", "UserAgent", "Day",
	"Month", "Year", "Hour", "ResponseCode", "APIKey", "TimeStamp", "APIVersion",
	"APIName", "APIID", "OrgID", "OauthID", "RequestTime", "RawRequest", "RawResponse",
	"IPAddress", "Geo", "Tags", "Alias", "TrackPath", "ExpireAt"    

      ]
#      remove_field => [ "RawResponse" ]
      
   }
   ruby {
     #code => 'event.set("decodedResponse", Base64.decode64(event.get("RawResponse")))'
     code => 'event.set("decodedRequest", Base64.decode64(event.get("RawRequest")))'
          
   }
     
   if [APIName] == "Authentication" {
     mutate {
       split => { "decodedRequest" => "{" }
       add_field => { "User" => "%{[decodedRequest][1]}"}
     
     }     
   
     mutate {
       replace => { "User" => "{%{User}" } 
     }

     json {
       source => "User"
       remove_field => "User"
       remove_field => "password"
       remove_field => "decodedRequest"
     } 
   }
   
 }
  if [type] == "federation" {
   mutate {
     split => { "headers" => "\r\n" }
   }
   
 }
}

output {
  elasticsearch {
    hosts => ["http://10.9.208.132:9200"]
    #index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    #user => "elastic"
    #password => "changeme"
  }
  stdout { codec => rubydebug }
}
